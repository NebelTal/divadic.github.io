{"version":3,"sources":["App.js","utils/search.js","reportWebVitals.js","index.js"],"names":["App","cards","setCards","useState","filtered","setFiltered","query","setQuery","useRegex","setUseRegex","searchFields","setSearchFields","カード名","効果テキスト","ライフバースト","カード種類","カードタイプ","displayFields","setDisplayFields","色","レベル","コスト","パワー","使用タイミング","deck","setDeck","showMainDeck","setShowMainDeck","minimized","setMinimized","displayOrder","fieldLabels","useEffect","fetch","concat","process","Date","now","then","res","json","data","handleSearch","keywords","split","map","kw","trim","filter","result","fields","card","every","regex","RegExp","some","field","value","test","toLowerCase","includes","e","console","error","seen","Set","has","add","filterCards","adjustDeck","cardName","delta","type","lb","prev","_prev$cardName","prevCount","count","newCount","Math","max","copy","_objectSpread","[object Object]","deckEntries","Object","entries","totalCount","reduce","acc","_ref","v","lbCount","_ref2","_v$ライフバースト","React","createElement","className","placeholder","onChange","target","onKeyDown","key","onClick","style","marginLeft","checked","keys","toggleField","toggleDisplayField","i","cursor","href","rel","fontSize","stopPropagation","listStyle","paddingLeft","_ref3","name","info","display","justifyContent","alignItems","marginRight","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.a5f27133.chunk.js","sourcesContent":["// 修正済みのApp.js（デッキ編集機能を含む、filterCards に修正）\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { filterCards } from \"./utils/search\";\n\nfunction App() {\n  const [cards, setCards] = useState([]);\n  const [filtered, setFiltered] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [useRegex, setUseRegex] = useState(false);\n  const [searchFields, setSearchFields] = useState({\n    カード名: true,\n    効果テキスト: true,\n    ライフバースト: false,\n    カード種類: false,\n    カードタイプ: false,\n  });\n  const [displayFields, setDisplayFields] = useState({\n    カード種類: true,\n    カードタイプ: true,\n    色: true,\n    レベル: true,\n    コスト: true,\n    パワー: true,\n    効果テキスト: true,\n    ライフバースト: true,\n    使用タイミング: true,\n  });\n  const [deck, setDeck] = useState({});\n  const [showMainDeck, setShowMainDeck] = useState(true);\n  const [minimized, setMinimized] = useState(false);\n\n  const displayOrder = [\n    \"カード種類\",\n    \"カードタイプ\",\n    \"色\",\n    \"レベル\",\n    \"コスト\",\n    \"パワー\",\n    \"効果テキスト\",\n    \"ライフバースト\",\n    \"使用タイミング\",\n  ];\n\n  const fieldLabels = {\n    カード名: \"カード名\",\n    効果テキスト: \"効果テキスト\",\n    ライフバースト: \"LB\",\n    カード種類: \"種類\",\n    カードタイプ: \"タイプ\",\n    色: \"色\",\n    レベル: \"Lv\",\n    コスト: \"コスト\",\n    パワー: \"パワー\",\n    使用タイミング: \"タイミング\",\n  };\n\n  useEffect(() => {\n    fetch(`${process.env.PUBLIC_URL}/cards.json?t=${Date.now()}`)\n      .then((res) => res.json())\n      .then((data) => setCards(data));\n  }, []);\n\nconst handleSearch = () => {\n  const keywords = query\n    .split(\" \")\n    .map((kw) => kw.trim())\n    .filter((kw) => kw); // 空文字列除去\n  const result = filterCards(cards, keywords, searchFields, useRegex);\n  setFiltered(result);\n};\n\n\n  const handleKeyDown = (e) => {\n    if (e.key === \"Enter\") handleSearch();\n  };\n\n  const toggleField = (field) => {\n    setSearchFields((prev) => ({ ...prev, [field]: !prev[field] }));\n  };\n\n  const toggleDisplayField = (field) => {\n    setDisplayFields((prev) => ({ ...prev, [field]: !prev[field] }));\n  };\n\n  const adjustDeck = (cardName, delta, type, lb) => {\n    setDeck((prev) => {\n      const prevCount = prev[cardName]?.count || 0;\n      const newCount = Math.max(0, prevCount + delta);\n      if (newCount === 0) {\n        const copy = { ...prev };\n        delete copy[cardName];\n        return copy;\n      }\n      return {\n        ...prev,\n        [cardName]: { count: newCount, ライフバースト: lb, カード種類: type },\n      };\n    });\n  };\n\n  const deckEntries = Object.entries(deck);\n  const totalCount = deckEntries.reduce((acc, [, v]) => acc + v.count, 0);\n  const lbCount = deckEntries.reduce(\n    (acc, [, v]) => acc + (v.ライフバースト?.includes(\"★\") ? v.count : 0),\n    0\n  );\n\n  return (\n    <div className=\"App\">\n      <div className=\"header-fixed\">\n        <h1>WIXOSS カード検索</h1>\n        <input\n          type=\"text\"\n          placeholder=\"検索...\"\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n          onKeyDown={handleKeyDown}\n        />\n        <button onClick={handleSearch}>検索</button>\n        <label style={{ marginLeft: \"10px\" }}>\n          <input\n            type=\"checkbox\"\n            checked={useRegex}\n            onChange={() => setUseRegex(!useRegex)}\n          /> 正規表現\n        </label>\n        <div className=\"field-controls\">\n          <strong>検索対象:</strong>\n          {Object.keys(searchFields).map((field) => (\n            <label key={field} style={{ marginLeft: \"10px\" }}>\n              <input\n                type=\"checkbox\"\n                checked={searchFields[field]}\n                onChange={() => toggleField(field)}\n              /> {fieldLabels[field] || field}\n            </label>\n          ))}\n        </div>\n        <div className=\"field-controls\">\n          <strong>表示項目:</strong>\n          {displayOrder.map((field) => (\n            <label key={field} style={{ marginLeft: \"10px\" }}>\n              <input\n                type=\"checkbox\"\n                checked={displayFields[field]}\n                onChange={() => toggleDisplayField(field)}\n              /> {fieldLabels[field] || field}\n            </label>\n          ))}\n        </div>\n        <table className=\"fixed-header-table\">\n          <thead>\n            <tr>\n              <th>カード名</th>\n              {displayOrder\n                .filter((key) => displayFields[key])\n                .map((key) => (\n                  <th key={key}>{fieldLabels[key]}</th>\n                ))}\n            </tr>\n          </thead>\n        </table>\n      </div>\n\n      <div className=\"table-container\">\n        <table className=\"fixed-header-table\">\n          <tbody>\n            {filtered.map((card, i) => (\n              <tr key={i}>\n                <td>\n                  <span\n                    style={{ cursor: \"pointer\" }}\n                    onClick={() =>\n                      adjustDeck(\n                        card[\"カード名\"],\n                        1,\n                        card[\"カード種類\"],\n                        card[\"ライフバースト\"]\n                      )\n                    }\n                  >\n                    {card[\"カード名\"]}\n                  </span>\n                  <a\n                    href={`https://www.takaratomy.co.jp/products/wixoss/library/card/card_detail.php?card_no=${card[\"カード番号\"]}`}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    style={{ marginLeft: \"0.3em\", fontSize: \"0.8em\" }}\n                    onClick={(e) => e.stopPropagation()}\n                  >\n                    ❔\n                  </a>\n                </td>\n                {displayOrder\n                  .filter((key) => displayFields[key])\n                  .map((key) => (\n                    <td key={key}>{card[key]}</td>\n                  ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n\n      <div className=\"deck-box\">\n        <div className=\"deck-header\">\n          <h3>{showMainDeck ? \"現在のメインデッキ\" : \"現在のルリグデッキ\"}</h3>\n          <div>\n            <button onClick={() => setShowMainDeck(!showMainDeck)}>ルリグ</button>\n            <button onClick={() => setMinimized(!minimized)}>\n              {minimized ? \"＋\" : \"－\"}\n            </button>\n          </div>\n        </div>\n        <p>\n          枚数: {totalCount} / LB: {lbCount}\n        </p>\n        {!minimized && (\n          <ul style={{ listStyle: \"none\", paddingLeft: 0 }}>\n            {deckEntries.map(([name, info]) => (\n              <li\n                key={name}\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                }}\n              >\n                <span>{name}</span>\n                <span\n                  style={{\n                    marginLeft: \"0.5em\",\n                    display: \"flex\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <button\n                    onClick={() =>\n                      adjustDeck(\n                        name,\n                        -1,\n                        info.カード種類,\n                        info.ライフバースト\n                      )\n                    }\n                    style={{ marginRight: 4 }}\n                  >\n                    －\n                  </button>\n                  <span>×{info.count}</span>\n                  {info.カード種類 !== \"ルリグ\" && info.count < 4 && (\n                    <button\n                      onClick={() =>\n                        adjustDeck(\n                          name,\n                          1,\n                          info.カード種類,\n                          info.ライフバースト\n                        )\n                      }\n                      style={{ marginLeft: 4 }}\n                    >\n                      ＋\n                    </button>\n                  )}\n                </span>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","export function filterCards(cards, keywords, fields, useRegex) {\r\n  const result = cards.filter((card) =>\r\n    keywords.every((kw) => {\r\n      try {\r\n        const regex = useRegex ? new RegExp(kw, \"i\") : null;\r\n        return fields.some((field) => {\r\n          const value = card[field] || \"\";\r\n          return useRegex\r\n            ? regex.test(value)\r\n            : value.toLowerCase().includes(kw.toLowerCase());\r\n        });\r\n      } catch (e) {\r\n        console.error(\"Invalid regex:\", kw);\r\n        return false;\r\n      }\r\n    })\r\n  );\r\n\r\n  const seen = new Set();\r\n  return result.filter((card) => {\r\n    if (seen.has(card[\"カード名\"])) return false;\r\n    seen.add(card[\"カード名\"]);\r\n    return true;\r\n  });\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}