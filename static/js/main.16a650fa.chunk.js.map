{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","cards","setCards","useState","filtered","setFiltered","query","setQuery","useRegex","setUseRegex","searchFields","setSearchFields","カード名","効果テキスト","ライフバースト","カード種類","カードタイプ","displayFields","setDisplayFields","色","レベル","コスト","パワー","使用タイミング","useEffect","fetch","concat","process","Date","now","then","res","json","data","handleSearch","keywords","split","filter","Boolean","activeFields","Object","entries","_ref","_","checked","map","_ref2","field","result","card","every","keyword","pattern","RegExp","some","text","test","toLowerCase","includes","e","console","error","uniqueByCardName","seen","Set","has","add","push","log","c","React","createElement","className","style","padding","fontFamily","marginBottom","width","type","placeholder","value","onChange","target","onKeyDown","key","marginLeft","keys","marginRight","_objectSpread","[object Object]","toggleField","toggleDisplayField","onClick","length","border","cellPadding","i","href","rel","fontSize","_ref3","_ref4","j","val","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.16a650fa.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [cards, setCards] = useState([]);\n  const [filtered, setFiltered] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [useRegex, setUseRegex] = useState(false);\n  const [searchFields, setSearchFields] = useState({\n    カード名: true,\n    効果テキスト: true,\n    ライフバースト: false,\n    カード種類: false,\n    カードタイプ: false,\n  });\n  const [displayFields, setDisplayFields] = useState({\n    効果テキスト: true,\n    ライフバースト: true,\n    カード種類: true,\n    カードタイプ: true,\n    色: true,\n    レベル: true,\n    コスト: true,\n    パワー: true,\n    使用タイミング: true,\n  });\n\n  useEffect(() => {\n    fetch(`${process.env.PUBLIC_URL}/cards.json?t=${Date.now()}`)\n      .then((res) => res.json())\n      .then((data) => setCards(data));\n  }, []);\n\n  const handleSearch = () => {\n    const keywords = query.split(/\\s+/).filter(Boolean);\n    const activeFields = Object.entries(searchFields)\n      .filter(([_, checked]) => checked)\n      .map(([field]) => field);\n\n    const result = cards.filter((card) =>\n      keywords.every((keyword) => {\n        try {\n          const pattern = useRegex ? new RegExp(keyword, \"i\") : null;\n          return activeFields.some((field) => {\n            const text = card[field] || \"\";\n            return useRegex ? pattern.test(text) : text.toLowerCase().includes(keyword.toLowerCase());\n          });\n        } catch (e) {\n          console.error(\"Invalid regex:\", keyword);\n          return false;\n        }\n      })\n    );\n\n    const uniqueByCardName = [];\n    const seen = new Set();\n    for (const card of result) {\n      if (!seen.has(card[\"カード名\"])) {\n        seen.add(card[\"カード名\"]);\n        uniqueByCardName.push(card);\n      }\n    }\n\n    console.log(\"検索結果のカード番号:\", uniqueByCardName.map(c => c[\"カード番号\"]));\n\n    setFiltered(uniqueByCardName);\n  };\n\n  const handleKeyDown = (e) => {\n    if (e.key === \"Enter\") {\n      handleSearch();\n    }\n  };\n\n  const toggleField = (field) => {\n    setSearchFields({ ...searchFields, [field]: !searchFields[field] });\n  };\n\n  const toggleDisplayField = (field) => {\n    setDisplayFields({ ...displayFields, [field]: !displayFields[field] });\n  };\n\n  return (\n    <div className=\"App\" style={{ padding: \"2rem\", fontFamily: \"sans-serif\" }}>\n      <h1>WIXOSS カード検索</h1>\n      <input\n        style={{ marginBottom: \"1rem\", padding: \"0.5em\", width: \"300px\" }}\n        type=\"text\"\n        placeholder=\"検索ワードを入力\"\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n        onKeyDown={handleKeyDown}\n      />\n      <label style={{ marginLeft: \"1em\" }}>\n        <input\n          type=\"checkbox\"\n          checked={useRegex}\n          onChange={() => setUseRegex(!useRegex)}\n        /> 正規表現を使用\n      </label>\n\n      <div style={{ marginBottom: \"1rem\" }}>\n        <strong>検索対象:</strong>\n        {Object.keys(searchFields).map((field) => (\n          <label key={field} style={{ marginRight: \"1em\" }}>\n            <input\n              type=\"checkbox\"\n              checked={searchFields[field]}\n              onChange={() => toggleField(field)}\n            />\n            {field}\n          </label>\n        ))}\n      </div>\n\n      <div style={{ marginBottom: \"1rem\" }}>\n        <strong>表示項目:</strong>\n        {Object.keys(displayFields).map((field) => (\n          <label key={field} style={{ marginRight: \"1em\" }}>\n            <input\n              type=\"checkbox\"\n              checked={displayFields[field]}\n              onChange={() => toggleDisplayField(field)}\n            />\n            {field}\n          </label>\n        ))}\n      </div>\n\n      <button onClick={handleSearch}>検索</button>\n\n      {filtered.length > 0 && (\n        <table border=\"1\" cellPadding=\"4\">\n          <thead>\n            <tr>\n              <th>カード名</th>\n              {Object.keys(filtered[0])\n                .filter((key) => key !== \"カード番号\" && key !== \"カード名\" && displayFields[key])\n                .map((key, i) => (\n                  <th key={i}>{key}</th>\n                ))}\n            </tr>\n          </thead>\n          <tbody>\n            {filtered.map((card, i) => (\n              <tr key={i}>\n                <td>\n                  {card[\"カード名\"]} {\" \"}\n                  <a\n                    href={`https://www.takaratomy.co.jp/products/wixoss/library/card/card_detail.php?card_no=${card[\"カード番号\"]}`}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    style={{ marginLeft: \"0.3em\", fontSize: \"0.8em\" }}\n                  >\n                    ❔\n                  </a>\n                </td>\n                {Object.entries(card)\n                  .filter(([key]) => key !== \"カード番号\" && key !== \"カード名\" && displayFields[key])\n                  .map(([_, val], j) => (\n                    <td key={j}>{val}</td>\n                  ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}