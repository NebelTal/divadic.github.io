{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","cards","setCards","useState","query","setQuery","useEffect","fetch","then","res","json","data","filtered","filter","card","Object","values","some","v","toLowerCase","includes","React","createElement","className","style","padding","fontFamily","marginBottom","width","type","placeholder","value","onChange","e","target","border","cellPadding","keys","map","key","i","val","j","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"0LAkDeA,MA/Cf,WACE,MAAOC,EAAOC,GAAYC,mBAAS,KAC5BC,EAAOC,GAAYF,mBAAS,IAEnCG,oBAAU,KACRC,MAAM,cACHC,KAAKC,GAAOA,EAAIC,QAChBF,KAAKG,GAAQT,EAASS,KACxB,IAEH,MAAMC,EAAWX,EAAMY,OAAOC,GAC5BC,OAAOC,OAAOF,GAAMG,KAAKC,IACtBA,GAAK,IAAIC,cAAcC,SAAShB,EAAMe,iBAI3C,OACEE,IAAAC,cAAA,OAAKC,UAAU,MAAMC,MAAO,CAAEC,QAAS,OAAQC,WAAY,eACzDL,IAAAC,cAAA,UAAI,yCACJD,IAAAC,cAAA,SACEE,MAAO,CAAEG,aAAc,OAAQF,QAAS,QAASG,MAAO,SACxDC,KAAK,OACLC,YAAY,mDACZC,MAAO3B,EACP4B,SAAUC,GAAK5B,EAAS4B,EAAEC,OAAOH,SAEnCV,IAAAC,cAAA,SAAOa,OAAO,IAAIC,YAAY,KAC5Bf,IAAAC,cAAA,aACED,IAAAC,cAAA,UACGrB,EAAM,IACLc,OAAOsB,KAAKpC,EAAM,IAAIqC,IAAI,CAACC,EAAKC,IAAMnB,IAAAC,cAAA,MAAIiB,IAAKC,GAAID,MAGzDlB,IAAAC,cAAA,aACGV,EAAS0B,IAAI,CAACxB,EAAM0B,IACnBnB,IAAAC,cAAA,MAAIiB,IAAKC,GACNzB,OAAOC,OAAOF,GAAMwB,IAAI,CAACG,EAAKC,IAC7BrB,IAAAC,cAAA,MAAIiB,IAAKG,GAAID,UC5BdE,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAb,EAAA,GAAAzB,KAAAsC,EAAAC,KAAA,UAAqBvC,KAAKwC,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCDDU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHrC,IAAAC,cAACD,IAAMsC,WAAU,KACftC,IAAAC,cAACtB,EAAG,QAOR2C","file":"static/js/main.a2c7cd71.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [cards, setCards] = useState([]);\n  const [query, setQuery] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\"cards.json\")\n      .then(res => res.json())\n      .then(data => setCards(data));\n  }, []);\n\n  const filtered = cards.filter(card =>\n    Object.values(card).some(v =>\n      (v || \"\").toLowerCase().includes(query.toLowerCase())\n    )\n  );\n\n  return (\n    <div className=\"App\" style={{ padding: \"2rem\", fontFamily: \"sans-serif\" }}>\n      <h1>WIXOSS カード検索</h1>\n      <input\n        style={{ marginBottom: \"1rem\", padding: \"0.5em\", width: \"300px\" }}\n        type=\"text\"\n        placeholder=\"検索ワードを入力\"\n        value={query}\n        onChange={e => setQuery(e.target.value)}\n      />\n      <table border=\"1\" cellPadding=\"4\">\n        <thead>\n          <tr>\n            {cards[0] &&\n              Object.keys(cards[0]).map((key, i) => <th key={i}>{key}</th>)}\n          </tr>\n        </thead>\n        <tbody>\n          {filtered.map((card, i) => (\n            <tr key={i}>\n              {Object.values(card).map((val, j) => (\n                <td key={j}>{val}</td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}